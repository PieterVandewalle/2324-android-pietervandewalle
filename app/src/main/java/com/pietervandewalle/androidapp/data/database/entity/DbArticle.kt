package com.pietervandewalle.androidapp.data.database.entity

import androidx.room.Entity
import androidx.room.Index
import androidx.room.PrimaryKey
import com.pietervandewalle.androidapp.model.Article
import java.time.LocalDate

/**
 * Represents an entity in the database for storing articles.
 *
 * @param id The unique identifier for the article. Automatically generated by the database.
 * @param title The title of the article.
 * @param date The publication date of the article.
 * @param readMoreUrl The URL for reading more about the article.
 * @param content The content of the article (optional).
 * @param imageUrl The URL of the image associated with the article (optional).
 */
@Entity(
    tableName = "articles",
    indices = [
        Index(
            value = ["title", "date"],
            unique = true,
        ),
    ],
)
data class DbArticle(
    @PrimaryKey(autoGenerate = true)
    val id: Int = 0,
    val title: String,
    val date: LocalDate,
    val readMoreUrl: String,
    val content: String? = null,
    val imageUrl: String? = null,
)

/**
 * Converts an [Article] to a [DbArticle] for storage in the database.
 *
 * @receiver The [Article] to be converted.
 * @return The corresponding [DbArticle].
 */
fun Article.asDbArticle(): DbArticle =
    DbArticle(id = id, title = title, date = date, readMoreUrl = readMoreUrl, content = content, imageUrl = imageUrl)

/**
 * Converts a [DbArticle] to an [Article] for the domain layer.
 *
 * @receiver The [DbArticle] to be converted.
 * @return The corresponding [Article].
 */
fun DbArticle.asDomainArticle(): Article =
    Article(id = id, title = title, date = date, readMoreUrl = readMoreUrl, content = content, imageUrl = imageUrl)

/**
 * Converts a list of [DbArticle] objects to a list of [Article] objects for the domain layer.
 *
 * @receiver The list of [DbArticle] objects to be converted.
 * @return The list of corresponding [Article] objects.
 */
fun List<DbArticle>.asDomainArticles(): List<Article> = map { it.asDomainArticle() }
